
%% Define quantities
t = sdpvar(1, 1);
x = sdpvar(2, 1);

Tmax = 5;

f0 = [x(2); -0.85*x(1)-x(2)+(x(1)^3)/3];
% f1 = {[0; -0.3*x(1)]};

NOISE = 1;
if NOISE
    %rows: dynamics
    %columns: number of uncertain inputs
%     fw = [0; -0.3*x(1)];
%     W = struct('A', [1; -1], 'b', [1; 1]);

else
    fw = [];
    W = [];
end


C0 = [1.5; 0];
R0 = 0.4;

X0 = struct('ineq', R0^2 - sum((x-C0).^2), 'eq', 0);

objective = -x(2);
objective = -x;

%% fill in location support
lsupp = loc_sos_options();
lsupp.t = t;
lsupp.x = x;
lsupp = lsupp.set_box([-1, 3; -1.5, 2]);
lsupp.X_init = X0;
lsupp.f0 = f0;
lsupp.fw = fw;
lsupp.W = W;
lsupp.Tmax = Tmax;


%% start up tester
PM = peak_sos(lsupp, objective);

order = 3;
d = 2*order;

[poly_out, coeff_out] = PM.make_poly(d);
[coeff_lie, con_lie] = PM.make_cons(d, poly_out)